<?xml version="1.0" encoding="utf-8"?>
<unattend xmlns="urn:schemas-microsoft-com:unattend" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State">

  <settings pass="windowsPE">
    <component name="Microsoft-Windows-Setup" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS">
      <UserData>
        <ProductKey>
          <Key>00000-00000-00000-00000-00000</Key>
          <WillShowUI>OnError</WillShowUI>
        </ProductKey>
        <AcceptEula>true</AcceptEula>
      </UserData>
      <UseConfigurationSet>false</UseConfigurationSet>
    </component>
  </settings>

  <settings pass="specialize">
    <component name="Microsoft-Windows-Deployment" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS">
      <RunSynchronous>
        <RunSynchronousCommand wcm:action="add">
          <Order>1</Order>
          <Path>powershell.exe -NoProfile -ExecutionPolicy Bypass -Command "$xml=[xml](Get-Content 'C:\Windows\Panther\unattend.xml'); $sb=[scriptblock]::Create($xml.unattend.Extensions.ExtractScript); Invoke-Command -ScriptBlock $sb -ArgumentList $xml"</Path>
        </RunSynchronousCommand>
        <RunSynchronousCommand wcm:action="add">
          <Order>2</Order>
          <Path>powershell.exe -NoProfile -ExecutionPolicy Bypass -File 'C:\Windows\Setup\Scripts\Specialize.ps1'</Path>
        </RunSynchronousCommand>
        <RunSynchronousCommand wcm:action="add">
          <Order>3</Order>
          <Path>reg.exe load "HKU\DefaultUser" "C:\Users\Default\NTUSER.DAT"</Path>
        </RunSynchronousCommand>
        <RunSynchronousCommand wcm:action="add">
          <Order>4</Order>
          <Path>powershell.exe -NoProfile -ExecutionPolicy Bypass -File 'C:\Windows\Setup\Scripts\DefaultUser.ps1'</Path>
        </RunSynchronousCommand>
        <RunSynchronousCommand wcm:action="add">
          <Order>5</Order>
          <Path>reg.exe unload "HKU\DefaultUser"</Path>
        </RunSynchronousCommand>
      </RunSynchronous>
    </component>
  </settings>

  <settings pass="oobeSystem">
    <component name="Microsoft-Windows-Shell-Setup" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS">
      <OOBE>
        <ProtectYourPC>3</ProtectYourPC>
        <HideEULAPage>true</HideEULAPage>
        <HideWirelessSetupInOOBE>true</HideWirelessSetupInOOBE>
        <HideOnlineAccountScreens>false</HideOnlineAccountScreens>
      </OOBE>
      <UserAccounts>
        <LocalAccounts>
          <LocalAccount wcm:action="add">
            <Name>ServiceDesk</Name>
            <DisplayName>Service Desk</DisplayName>
            <Group>Administrators</Group>
            <Password>
              <Value></Value>
              <PlainText>true</PlainText>
            </Password>
          </LocalAccount>
        </LocalAccounts>
      </UserAccounts>
      <AutoLogon>
        <Username>ServiceDesk</Username>
        <Enabled>true</Enabled>
        <LogonCount>1</LogonCount>
        <Password>
          <Value></Value>
          <PlainText>true</PlainText>
        </Password>
      </AutoLogon>
      <FirstLogonCommands>
        <SynchronousCommand wcm:action="add">
          <Order>1</Order>
          <CommandLine>powershell.exe -NoProfile -ExecutionPolicy Bypass -File "C:\Windows\Setup\Scripts\FirstLogon.ps1"</CommandLine>
        </SynchronousCommand>
      </FirstLogonCommands>
    </component>
  </settings>

  <Extensions xmlns="https://schneegans.de/windows/unattend-generator/">

    <ExtractScript>
param([xml] $Document)
foreach ($file in $Document.unattend.Extensions.File) {
  $path = [Environment]::ExpandEnvironmentVariables($file.GetAttribute('path'))
  mkdir -Path ($path | Split-Path -Parent) -ErrorAction SilentlyContinue | Out-Null
  $encoding = switch ([IO.Path]::GetExtension($path)) {
    {$_ -in '.ps1', '.xml'} {[Text.Encoding]::UTF8}
    {$_ -in '.reg', '.vbs', '.js'} {[Text.UnicodeEncoding]::new($false, $true)}
    default {[Text.Encoding]::Default}
  }
  $bytes = $encoding.GetPreamble() + $encoding.GetBytes($file.InnerText.Trim())
  [IO.File]::WriteAllBytes($path, $bytes)
}
    </ExtractScript>

    <!-- Cambiar color o imagen de fondo -->
    <File path="C:\Windows\Setup\Scripts\SetWallpaper.ps1">
Add-Type -TypeDefinition '
using System.Drawing;
using System.Runtime.InteropServices;
public static class WallpaperSetter {
  [DllImport("user32.dll")] private static extern bool SystemParametersInfo(uint uiAction, uint uiParam, string pvParam, uint fWinIni);
  public static void SetDesktopImage(string file) { SystemParametersInfo(20, 0, file, 3); }
}
'
function Set-WallpaperImage($LiteralPath) {
  if (Test-Path $LiteralPath) {
    [WallpaperSetter]::SetDesktopImage($LiteralPath)
    Set-ItemProperty -Path 'HKCU:\Control Panel\Desktop' -Name 'Wallpaper' -Value $LiteralPath
  }
}
# Cambiá esta ruta a tu imagen personalizada (ya incluida en la ISO)
Set-WallpaperImage "C:\Windows\Web\Wallpaper\Windows\img0.jpg"
    </File>

    <File path="C:\Windows\Setup\Scripts\Specialize.ps1">
# Configuración de sistema y políticas
net accounts /maxpwage:UNLIMITED
reg add "HKLM\Software\Policies\Microsoft\Edge" /v HideFirstRunExperience /t REG_DWORD /d 1 /f
reg add "HKLM\Software\Policies\Microsoft\Edge\Recommended" /v BackgroundModeEnabled /t REG_DWORD /d 0 /f
reg add "HKLM\Software\Policies\Microsoft\Edge\Recommended" /v StartupBoostEnabled /t REG_DWORD /d 0 /f
    </File>

    <File path="C:\Windows\Setup\Scripts\DefaultUser.ps1">
# NumLock ON por defecto y script para primera sesión
foreach ($root in 'HKU\.DEFAULT', 'HKU\DefaultUser') {
  Set-ItemProperty -Path "$root\Control Panel\Keyboard" -Name 'InitialKeyboardIndicators' -Value '2'
}
reg add "HKU\DefaultUser\Software\Microsoft\Windows\CurrentVersion\RunOnce" /v "UserInit" /t REG_SZ /d "powershell.exe -NoProfile -ExecutionPolicy Bypass -File 'C:\Windows\Setup\Scripts\UserOnce.ps1'" /f
    </File>

    <File path="C:\Windows\Setup\Scripts\UserOnce.ps1">
# Se ejecuta para el primer usuario creado (ServiceDesk)
powershell.exe -NoProfile -ExecutionPolicy Bypass -File "C:\Windows\Setup\Scripts\SetWallpaper.ps1"
    </File>

    <File path="C:\Windows\Setup\Scripts\FirstLogon.ps1">
# Instalación de AnyDesk en primer inicio
winget install --id=AnyDeskSoftware.AnyDesk -e --silent
# Limpieza
Remove-Item -LiteralPath @(
  'C:\Windows\Panther\unattend.xml',
  'C:\Windows\Panther\unattend-original.xml',
  'C:\Windows\Setup\Scripts\Wifi.xml'
) -Force -ErrorAction SilentlyContinue
    </File>

  </Extensions>
</unattend>
